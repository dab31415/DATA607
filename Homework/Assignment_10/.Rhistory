library(lexicon)
lexicon::available_data()
install.packages("gutenbergr")
library(gutenbergr)
gutenbergr::gutenberg_authors
authors <- gutenbergr::gutenberg_authors
View(authors)
authors %>% filter(birthdate > 1920)
library(tidyverse)
library(tidytext)
authors %>% filter(birthdate > 1920)
authors %>% arrange(desc(birthdate))
gutenbergr::gutenberg_works()
?unnest_tokens
knitr::opts_chunk$set(echo = TRUE)
get_sentiments('AFINN')
get_sentiments('afinn')
library(tidyverse)
library(tidytext)
library(janeaustenr)
get_sentiments('afinn')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
library(janeaustenr)
get_sentiments('afinn')
get_sentiments("affin")
get_sentiments("afinn")
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
install.packages(c("backports", "broom", "bslib", "cli", "crayon", "data.table", "desc", "diffobj", "fivethirtyeight", "generics", "ggVennDiagram", "lubridate", "mime", "pillar", "pkgload", "plotly", "rcmdcheck", "readr", "remotes", "rlang", "rvest", "s2", "sessioninfo", "sf", "shiny", "stringi", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "xfun"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
library(janeaustenr)
get_sentiments("afinn")
install.packages("textdata")
get_sentiments("afinn")
get_sentiments("bing")
get_sentiments("nrc")
caption('tidy-text-mining')
?caption
citation('tidy-text-mining')
install.packages(tidy-text-mining)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,regex("^chapter [\\divxlc]", ignore_case = TRUE)))
) %>%
ungroup() %>%
unnest_tokens(word,text)
View(tidy_books)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,regex("^chapter [\\divxlc]", ignore_case = TRUE)))
) %>%
ungroup() %>%
unnest_tokens(word,text)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments('bing')) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
View(jane_austen_sentiment)
View(tidy_books)
tidy_books %>% group_by(book) %>% max(chapter)
count(tidy_books,c(book,chapter))
tidy_books %>% group_by(book)
tidy_books %>% count(book,chapter)
a <- tidy_books %>% count(book,chapter)
View(a)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,regex("^chapter [\\divxlc]", ignore_case = TRUE)))
) %>%
ungroup() %>%
unnest_tokens(word,text)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments('bing')) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
jane_austen_sentiment %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,regex("^chapter [\\divxlc]", ignore_case = TRUE)))
) %>%
ungroup() %>%
unnest_tokens(word,text)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments('bing'), by = word) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,regex("^chapter [\\divxlc]", ignore_case = TRUE)))
) %>%
ungroup() %>%
unnest_tokens(word,text)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
jane_austen_sentiment %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
pride_prejudice <- tidy_books %>%
filter(book == "Pride & Prejudice")
afinn <- pride_prejudice %>%
inner_join(get_sentiments('afinn'), by = 'word') %>%
group_by(index = linenumber %/% 80) %>%
summarize(sentiment = sum(value)) %>%
mutate(method = "AFINN")
bing_and_nrc <- bind_rows(
pride_prejudice %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
mutate(method = "Bing et al."),
pride_prejudice %>%
inner_join(get_sentiments('nrc') %>%
filter(sentiment %in% c('positive','negative')), by = 'word') %>%
mutate(method = 'NRC')
) %>%
count(method, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
View(bing_and_nrc)
View(afinn)
pride_prejudice <- tidy_books %>%
filter(book == "Pride & Prejudice")
afinn <- pride_prejudice %>%
inner_join(get_sentiments('afinn'), by = 'word') %>%
group_by(index = linenumber %/% 80) %>%
summarize(sentiment = sum(value)) %>%
mutate(method = "AFINN")
bing_and_nrc <- bind_rows(
pride_prejudice %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
mutate(method = "Bing et al."),
pride_prejudice %>%
inner_join(get_sentiments('nrc') %>%
filter(sentiment %in% c('positive','negative')), by = 'word') %>%
mutate(method = 'NRC')
) %>%
count(method, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
bind_rows(afinn, bing_and_nrc) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = 'free_y')
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = 'free_y') +
labs(x = 'Contribution to sentiment', y = NULL)
custom_stop_words <- bind_rows(tibble(word = c('miss'), lexicon = c('custom')), stop_words)
custom_stop_words
library(tidyverse)
library(tidytext)
library(janeaustenr)
library(wordcloud)
tidy_books %>%
anti_join(stop_words, by = 'word') %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
library(tidyverse)
library(tidytext)
library(janeaustenr)
library(wordcloud)
library(reshape2)
tidy_books %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = 'n', fill = 0) %>%
comparison.cloud(colors = c('gray20', 'gray80'), max.words = 100)
tidy_books %>%
anti_join(custom_stop_words, by = 'word') %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = 'n', fill = 0) %>%
comparison.cloud(colors = c('gray20', 'gray80'), max.words = 100)
tidy_books %>%
anti_join(tibble(word = c('miss'), lexicon = c('custom')), by = 'word') %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = 'n', fill = 0) %>%
comparison.cloud(colors = c('gray20', 'gray80'), max.words = 100)
tidy_books %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = 'n', fill = 0) %>%
comparison.cloud(colors = c('gray20', 'gray80'), max.words = 100)
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = regex('chapter [\\dIVXLC]', ignore_case = TRUE)) %>%
ungroup()
View(austen_chapters)
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = regex("^chapter [\\divxlc]", ignore_case = TRUE)) %>%
ungroup()
View(austen_chapters)
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = "^Chapter|CHAPTER [\\divxlc]") %>%
ungroup()
View(austen_chapters)
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = "Chapter|CHAPTER [\\divxlc]") %>%
ungroup()
View(austen_chapters)
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = "Chapter|CHAPTER|chapter [\\divxlc]") %>%
ungroup()
View(austen_chapters)
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = "Chapter|CHAPTER|chapter [\\divxlc]") %>%
ungroup()
austen_chapters %>%
group_by(book) %>%
summarize(chapters = n())
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = 'regex', pattern = "Chapter|CHAPTER|chapter [\\divxlc]") %>%
ungroup()
austen_chapters %>%
group_by(book) %>%
summarize(chapters = n())
bing_negative <- get_sentiments('bing') %>%
filter(sentiment == 'negative')
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bing_negative, by = 'word') %>%
group_by(book, chapter) %>%
summarize(negativewords = n()) %>%
left_join(wordcounts, by = c('book','chapter')) %>%
mutate(ratio = negativewords / words) %>%
filter(chapter != 0) %>%
slice_max(ratio, n = 1) %>%
ungroup()
View(jane_austen_sentiment)
View(tidy_books)
View(authors)
View(authors)
gutenbergr::gutenberg_works()
gutenbergr::gutenberg_authors
authors %>% filter(grepl('louis',author))
authors %>% filter(grepl('amour',author))
authors %>% filter(grepl('vonn',author))
authors %>% filter(grepl('vonnegut',author))
authors %>% filter(grepl('vonnegut',author,ignore.case = TRUE))
authors %>% filter(grepl('louis',author,ignore.case = TRUE))
l <- authors %>% filter(grepl('louis',author,ignore.case = TRUE))
View(l)
View(l)
citation("gutenbergr")
View(authors)
authors %>% filter(author == 'Bradbury, Ray')
library(gutenbergr)
bradbury_id <- gutenberg_authors %>%
filter(author == 'Bradbury, Ray') %>%
select(gutenberg_author_id)
bradbury_books <- gutenbergr::gutenberg_download()
View(bradbury_id)
library(gutenbergr)
bradbury_id <- gutenberg_authors %>%
filter(author == 'Bradbury, Ray') %>%
select(gutenberg_author_id)
bradbury_books <- gutenberg_download(bradbury_id)
View(bradbury_books)
?gutenberg_download()
?gutenberg_works()
library(gutenbergr)
bradbury_books <- gutenberg_works(author == 'Bradbury, Ray') %>%
gutenberg_download(meta_fields = 'title')
View(bradbury_books)
bradbury_books %>% group_by(gutenberg_id) %>% slice_max(title)
bradbury_books %>% group_by(gutenberg_id) %>% count(gutenberg_id)
bradbury_books %>% group_by(title) %>% count(gutenberg_id)
library(gutenbergr)
bradbury_books <- gutenberg_works(author == 'Conan Doyle, Arthur, Sir') %>%
gutenberg_download(meta_fields = 'title')
authors %>% filter(grepl('Doyle',author))
library(gutenbergr)
bradbury_books <- gutenberg_works(author == 'Doyle, Arthur Conan') %>%
gutenberg_download(meta_fields = 'title')
bradbury_books %>% group_by(title) %>% count(gutenberg_id)
View(bradbury_books)
View(bradbury_books)
View(bradbury_books)
doyle_books <- gutenberg_works(author == 'Doyle, Arthur Conan')
View(doyle_books)
library(gutenbergr)
doyle_books <- gutenberg_works(author == 'Doyle, Arthur Conan') %>%
filter(gutenberg_bookshelf == 'Detective Fiction') %>%
gutenberg_download(meta_fields = 'title')
View(doyle_books)
doyle_books %>% group_by(title) %>% count(gutenberg_id)
library(gutenbergr)
doyle_books <- gutenberg_works(author == 'Doyle, Arthur Conan') %>%
filter(gutenberg_bookshelf == 'Detective Fiction')
doyle_books
tidy_doyle <- doyle_books %>%
gutenberg_download(meta_fields = 'title') %>%
group_by(gutenberg_id) %>%
mutate(linenumber = row_number()) %>%
ungroup() %>%
unnest_tokens(word, text)
View(tidy_doyle)
tidy_doyle %>% count(word) %>% filter(word == 'chapter')
lines_per_index <- 80
doyle_sentiment <- tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(book, index = linenumber %/% lines_per_index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
lines_per_index <- 80
doyle_sentiment <- tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(title, index = linenumber %/% lines_per_index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
doyle_sentiment %>%
ggplot(aes(index, sentiment, fill = title)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
lines_per_index <- 80
doyle_sentiment <- tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(title, index = linenumber %/% lines_per_index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
doyle_sentiment %>%
ggplot(aes(index, sentiment, fill = title)) +
geom_col(show.legend = FALSE) +
facet_wrap(~title, ncol = 2, scales = "free_x")
lines_per_index <- 80
doyle_sentiment <- tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(title, index = linenumber %/% lines_per_index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
doyle_sentiment %>%
ggplot(aes(index, sentiment, fill = title)) +
geom_col(show.legend = FALSE) +
facet_wrap(~title, ncol = 3, scales = "free_x")
lines_per_index <- 80
doyle_sentiment <- tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(title, index = linenumber %/% lines_per_index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
doyle_sentiment %>%
ggplot(aes(index, sentiment, fill = title)) +
geom_col(show.legend = FALSE) +
facet_wrap(~title, ncol = 3, scales = "free_x")
study_scarlet <- tidy_doyle %>%
filter(book == "A Study in Scarlet")
study_scarlet <- tidy_doyle %>%
filter(title == "A Study in Scarlet")
scarlet_afinn <- study_scarlet %>%
inner_join(get_sentiments('afinn'), by = 'word') %>%
group_by(index = linenumber %/% lines_per_index) %>%
summarize(sentiment = sum(value)) %>%
mutate(method = "AFINN")
scarlet_bing_and_nrc <- bind_rows(
study_scarlet %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
mutate(method = "Bing et al."),
study_scarlet %>%
inner_join(get_sentiments('nrc') %>%
filter(sentiment %in% c('positive','negative')), by = 'word') %>%
mutate(method = 'NRC')
) %>%
count(method, index = linenumber %/% lines_per_index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
bind_rows(scarlet_afinn, scarlet_bing_and_nrc) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = 'free_y')
?get_sentiments()
doyle_bing_word_counts <- tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
doyle_bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = 'free_y') +
labs(x = 'Contribution to sentiment', y = NULL)
tidy_holmes %>%
anti_join(stop_words, by = 'word') %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidy_doyle %>%
anti_join(stop_words, by = 'word') %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidy_doyle %>%
inner_join(get_sentiments('bing'), by = 'word') %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = 'n', fill = 0) %>%
comparison.cloud(colors = c('gray20', 'gray80'), max.words = 100)
install.packages("syuzhet")
library(syuzhet)
library(syuzhet)
sent <- get_sentiment(study_scarlet)
get_sentiments('nrc')
get_sentiments('nrc') %>% count(sentiment)
get_sentiments('nrc') %>% count(sentiment,sort = TRUE)
s <- get_sentiments('nrc') %>% count(sentiment,sort = TRUE)
View(s)
tidy_doyle %>%
inner_join(get_sentiments('nrc'), by = 'word') %>%
count(word, sentiment, sort = TRUE)
tidy_doyle %>%
inner_join(get_sentiments('nrc'), by = 'word') %>%
count(title, word, sentiment, sort = TRUE)
tidy_doyle %>%
inner_join(get_sentiments('nrc'), by = 'word') %>%
count(title, sentiment, sort = TRUE)
tidy_doyle %>%
inner_join(get_sentiments('nrc'), by = 'word') %>%
count(title, sentiment)
get_sentiment(tidy_doyle$word)
sent <- get_sentiment(tidy_doyle$word)
doyle_books %>%
filter(title == 'A Study in Scarlet')
study_in_scarlet <- doyle_books %>%
filter(title == 'A Study in Scarlet') %>%
gutenberg_download(meta_fields = 'title')
View(study_in_scarlet)
syuzhet_sentiment <- get_sentiment(study_in_scarlet$text, method = 'syuzhet')
summary(syuzhet_sentiment)
hist(syuzhet_sentiment,col = 'steelblue')
study_in_scarlet <- doyle_books %>%
filter(title == 'A Study in Scarlet') %>%
gutenberg_download(meta_fields = 'title') %>%
filter(grepl('[A-Za-z]',text))
syuzhet_sentiment <- get_sentiment(study_in_scarlet$text, method = 'syuzhet')
summary(syuzhet_sentiment)
hist(syuzhet_sentiment,col = 'steelblue')
citation("syuzhet")
?syuzhet
